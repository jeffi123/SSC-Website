"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
module.exports = void 0;

var _vue = require("vue");

var _index = _interopRequireDefault(require("@inkline/inkline/components/IContainer/index.vue"));

var _index2 = _interopRequireDefault(require("@inkline/inkline/components/IRow/index.vue"));

var _index3 = _interopRequireDefault(require("@inkline/inkline/components/IColumn/index.vue"));

var _index4 = _interopRequireDefault(require("@inkline/inkline/components/IHamburgerMenu/index.vue"));

var _mixins = require("@inkline/inkline/mixins");

var _directives = require("@inkline/inkline/directives");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const componentName = "INavbar";

var _default = (0, _vue.defineComponent)({
  name: componentName,
  components: {
    IContainer: _index.default,
    IRow: _index2.default,
    IColumn: _index3.default,
    IHamburgerMenu: _index4.default
  },
  directives: {
    ClickOutside: _directives.ClickOutside
  },
  mixins: [_mixins.CollapsibleMixin],

  provide() {
    return {
      navbar: this
    };
  },

  props: {
    collapseOnItemClick: {
      type: Boolean,
      default: true
    },
    collapseOnClickOutside: {
      type: Boolean,
      default: true
    },
    color: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "color")
    },
    fluid: {
      type: Boolean,
      default: false
    },
    size: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "size"),
      validator: _mixins.sizePropValidator
    },
    menuAnimation: {
      type: String,
      default: "close"
    }
  },
  emits: ["update:modelValue"],
  computed: {
    classes() {
      return { ...this.collapsibleClasses,
        ...(0, _mixins.colorVariantClass)(this),
        [`-${this.size}`]: Boolean(this.size)
      };
    }

  },
  methods: {
    onItemClick() {
      if (this.collapseOnItemClick && this.open) {
        this.setOpen(false);
      }
    },

    onClickOutside() {
      if (this.collapseOnClickOutside && this.open) {
        this.setOpen(false);
      }
    }

  }
});

module.exports = _default;