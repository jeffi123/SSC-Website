"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
module.exports = void 0;

var _vue = require("vue");

var _helpers = require("@inkline/inkline/helpers");

const componentName = "IFormError";

var _default = (0, _vue.defineComponent)({
  name: componentName,
  inject: {
    formGroup: {
      default: () => ({})
    },
    form: {
      default: () => ({})
    }
  },
  props: {
    for: {
      type: String,
      default: ""
    },
    visible: {
      type: [Array, String],
      default: () => ["touched", "dirty", "invalid"]
    }
  },
  computed: {
    parent() {
      if (this.formGroup.$) {
        return this.formGroup;
      }

      return this.form;
    },

    schema() {
      if (this.for !== "") {
        return (0, _helpers.getValueByPath)(this.parent.schema || {}, `${this.for}`);
      }

      return this.parent.schema || {};
    },

    errors() {
      return this.schema.errors || [];
    },

    isVisible() {
      let visible = true;

      if (this.schema && this.visible) {
        [].concat(this.visible).forEach(status => {
          visible = visible && this.schema[status];
        });
      }

      return visible;
    }

  }
});

module.exports = _default;