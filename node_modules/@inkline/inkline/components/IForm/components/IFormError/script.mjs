import { defineComponent } from "vue";
import { getValueByPath } from "@inkline/inkline/helpers";
const componentName = "IFormError";
export default defineComponent({
  name: componentName,
  inject: {
    formGroup: {
      default: () => ({})
    },
    form: {
      default: () => ({})
    }
  },
  props: {
    for: {
      type: String,
      default: ""
    },
    visible: {
      type: [Array, String],
      default: () => ["touched", "dirty", "invalid"]
    }
  },
  computed: {
    parent() {
      if (this.formGroup.$) {
        return this.formGroup;
      }
      return this.form;
    },
    schema() {
      if (this.for !== "") {
        return getValueByPath(this.parent.schema || {}, `${this.for}`);
      }
      return this.parent.schema || {};
    },
    errors() {
      return this.schema.errors || [];
    },
    isVisible() {
      let visible = true;
      if (this.schema && this.visible) {
        [].concat(this.visible).forEach((status) => {
          visible = visible && this.schema[status];
        });
      }
      return visible;
    }
  }
});
