import { defineComponent } from "vue";
import {
  CollapsibleMixin,
  defaultPropValue,
  colorVariantClass,
  sizePropValidator
} from "@inkline/inkline/mixins";
const componentName = "ISidebar";
export default defineComponent({
  name: componentName,
  mixins: [
    CollapsibleMixin
  ],
  provide() {
    return {
      sidebar: this
    };
  },
  props: {
    ariaLabel: {
      type: String,
      default: "Sidebar"
    },
    collapseOnItemClick: {
      type: Boolean,
      default: true
    },
    collapseOnClickOutside: {
      type: Boolean,
      default: true
    },
    collapsePosition: {
      type: String,
      default: "absolute"
    },
    color: {
      type: String,
      default: defaultPropValue(componentName, "color")
    },
    placement: {
      type: String,
      default: "left"
    },
    size: {
      type: String,
      default: defaultPropValue(componentName, "size"),
      validator: sizePropValidator
    }
  },
  emits: [
    "update:modelValue"
  ],
  computed: {
    classes() {
      return {
        ...this.collapsibleClasses,
        ...colorVariantClass(this),
        [`-${this.size}`]: Boolean(this.size),
        [`-collapse-${this.collapsePosition}`]: true,
        [`-placement-${this.placement}`]: true
      };
    },
    sidebarWrapperTransition() {
      return this.collapsePosition !== "relative" ? "sidebar-wrapper-none-transition" : "sidebar-wrapper-transition";
    },
    sidebarTransition() {
      return this.collapsePosition !== "relative" ? "sidebar-transition" : "sidebar-none-transition";
    }
  },
  methods: {
    onItemClick() {
      if (this.collapseOnItemClick && this.open) {
        this.setOpen(false);
      }
    },
    onOverlayClick() {
      if (this.collapseOnClickOutside && this.open) {
        this.setOpen(false);
      }
    }
  }
});
